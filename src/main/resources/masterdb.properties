##druid数据库连接池配置##
# MySql数据库连接信息
master.datasource.druid.url=jdbc:mysql://192.168.10.123:3306/common_ssm?useUnicode=true&characterEncoding=UTF-8&useSSL=false
# 根据url自动识别 这一项可配可不配,
# 如果不配置druid会根据url自动识别dbType,
# 然后选择相应的driverClassName(建议配置下)
master.datasource.druid.driverClassName=com.mysql.jdbc.Driver
master.datasource.druid.userName=root
master.datasource.druid.password=MaryF6650

# 初始化时建立物理连接的个数
# 初始化发生在显示调用init方法,或者第一次getConnection时
master.datasource.druid.initialSize=5
# 最小连接池数量
master.datasource.druid.minIdle=5
# 最大连接池数量
master.datasource.druid.maxActive=25
# 获取最大连接时最大等待时间,单位时毫秒
# 配置了maxWait之后,缺省启用公平锁，并发效率会有所下降
# 如果需要可以通过配置useUnfairLock属性为true使用非公平锁
master.datasource.druid.maxWait=5000
# 是否缓存preparedStatement,也就是PSCache
# PSCache对支持游标的数据库性能提升巨大,比如说oracle.
# 在mysql下建议关闭
master.datasource.druid.poolPreparedStatements=false
# 当poolPreparedStatements配置为true时,才可以使用
# 要启用PSCache,必须配置大于0,当大于0时,poolPreparedStatements自动触发修改为true。
# 在Druid中,不会存在Oracle下PSCache占用内存过多的问题
# 可以把这个数值配置大一些,比如说100
#master.datasource.druid.maxOpenPreparedStatements=100
#用来检测连接是否有效的sql,要求是一个查询语句
# 如果validationQuery为null,testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
master.datasource.druid.validationQuery = SELECT 'x'
# 申请连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
# 开发时使用,生产环境建议关闭
# 默认值为true
master.datasource.druid.testOnBorrow=true
# 归还连接时执行validationQuery检测连接是否有效,做了这个配置会降低性能
# 默认值为false
master.datasource.druid.testOnReturn=false
#建议配置为true,不影响性能,并且保证安全性.申请连接的时候检测
# 如果空闲时间大于timeBetweenEvictionRunsMillis
# 执行validationQuery检测连接是否有效
# 默认值为false
master.datasource.druid.testWhileIdle=true
# 1)Destroy线程会检测连接的间隔时间
# 2)testWhileIdle的判断依据
master.datasource.druid.timeBetweenEvictionRunsMillis=5000
#一个连接在池中最小生存的时间，单位是毫秒
master.datasource.druid.minEvictableIdleTimeMillis=300000

# 属性类型是字符串,通过别名的方式配置扩展插件,
# 常用的插件有： 监控统计用的filter:stat日志用的filter:log4j 防御sql注入的filter:wall
# 如果想配置多个filter使用 proxyFilters 属性
# proxyFilters 类型是List,如果同时配置了filters和proxyFilters，是组合关系，并非替换关系
master.datasource.druid.filters=stat